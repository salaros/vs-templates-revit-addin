<Project Sdk="Microsoft.NET.Sdk.WindowsDesktop" ToolsVersion="Current">

  <PropertyGroup>
    <LangVersion>latest</LangVersion>
    <Configurations>Debug;Release</Configurations>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Please remove the targets you don't need in order
      to exclude Revit versions your add-in won't support
      use the list below for matching Revit version with .NET target
              2014  |  net40
              2015  |  net45
              2016  |  net451
              2017  |  net452
              2018  |  net46
              2019  |  net47
              2020  |  net471
              2021  |  net48
              2022  |  net48
              2023  |  net48
      For example you can exclude Revit 2014, by simply removing net40 target belows
      -->
    <TargetFrameworks>net48;net471;net47;net46;net452;net451;net45;net40</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <!-- You could debug just ONE addin version,
         instead of building all the versions above.
         Just put ONE target from the list above
         e.g. if you want to debug ONLY Revit 2019,
         put net47 below and switch to 'Debug One' configuration
      -->
    <TargetFrameworks>net482</TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework.Contains('net481')) Or $(TargetFramework.Contains('net482'))">
    <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
    <TargetFrameworkMoniker>.NETFrameWork,Version=v4.8</TargetFrameworkMoniker>
  </PropertyGroup>

  <PropertyGroup Condition="$(TargetFramework.Contains('net481')) Or $(TargetFramework.Contains('net482'))">
    <AssetTargetFallbackn>net48</AssetTargetFallbackn>
    <DisableImplicitFrameworkReferences>false</DisableImplicitFrameworkReferences>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net40' And '$(RevitVersion)' == ''">
    <RevitVersion>2014</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net45' And '$(RevitVersion)' == ''">
    <RevitVersion>2015</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net451' And '$(RevitVersion)' == ''">
    <RevitVersion>2016</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net452' And '$(RevitVersion)' == ''">
    <RevitVersion>2017</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net46' And '$(RevitVersion)' == ''">
    <RevitVersion>2018</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net47' And '$(RevitVersion)' == ''">
    <RevitVersion>2019</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net471' And '$(RevitVersion)' == ''">
    <RevitVersion>2020</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net48' And '$(RevitVersion)' == ''">
    <RevitVersion>2021</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net481'">
    <RevitVersion>2022</RevitVersion>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net482'">
    <RevitVersion>2023</RevitVersion>
  </PropertyGroup>

  <PropertyGroup>
    <!-- Forcibly set platform to 'x64' and ignore architecture-related problems -->
    <PlatformTarget>x64</PlatformTarget>
    <Platforms>x64</Platforms>
    <Platform>x64</Platform>
    <!-- RuntimeIdentifier>win-x64</RuntimeIdentifier -->

    <UseWindowsForms>true</UseWindowsForms>
    <UseWPF>true</UseWPF>
    <NeutralLanguage>en</NeutralLanguage>

</PropertyGroup>

  <PropertyGroup>
    <IsPackable>false</IsPackable>
    <ResolveNuGetPackages>true</ResolveNuGetPackages>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <GenerateRuntimeConfigurationFiles>false</GenerateRuntimeConfigurationFiles>
    <RestoreProjectStyle>PackageReference</RestoreProjectStyle>
  </PropertyGroup>

  <PropertyGroup>
    <UseWindowsForms>true</UseWindowsForms>
    <UseWPF>true</UseWPF>
    <NeutralLanguage>en</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>

    <!-- Force the project to use the legacy debugger engine -->
    <DebugEngines>{351668CC-8477-4fbf-BFE3-5F1006E4DB1F}</DebugEngines>

    <!-- Invert the behavior of new .csproj format - exclude files by default -->
    <EnableDefaultCompileItems>false</EnableDefaultCompileItems>
    <EnableDefaultItems>false</EnableDefaultItems>

    <!-- Define handy symbols to use in the code in order to accommodate different Revit versions,
    e.g. by wrapping legacy / deprecated API calls with #if REVIT2014 | REVIT2015 -->
    <DefineConstants>$(DefineConstants);REVIT$(RevitVersion)</DefineConstants>
    <PreprocessorDefinitions>$(DefineConstants)</PreprocessorDefinitions>

    <!-- Multiple targets can cause obj folder locking by concurrent builds -->
    <BuildInParallel>false</BuildInParallel>

    <!-- Override 'OutputPath' to Debug/Release + Revit version -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>
    <OutputPath>$(SolutionDir)\bin\$(Configuration)\$(RevitVersion)</OutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="$(Configuration.Contains('Debug'))">
    <DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
    <DebugType>full</DebugType>
    <OutputPath>$(SolutionDir)\bin\Debug\$(RevitVersion)</OutputPath>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Autodesk.Revit.SDK" Version="2014.*" Condition=" '$(RevitVersion)' == '2014' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2015.*" Condition=" '$(RevitVersion)' == '2015' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2016.*" Condition=" '$(RevitVersion)' == '2016' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2017.*" Condition=" '$(RevitVersion)' == '2017' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2018.*" Condition=" '$(RevitVersion)' == '2018' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2019.*" Condition=" '$(RevitVersion)' == '2019' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2020.*" Condition=" '$(RevitVersion)' == '2020' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2021.*" Condition=" '$(RevitVersion)' == '2021' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2022.*" Condition=" '$(RevitVersion)' == '2022' " PrivateAssets="All" />
    <PackageReference Include="Autodesk.Revit.SDK" Version="2023.*" Condition=" '$(RevitVersion)' == '2023' " PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <!-- Add-in manifest is processed via MSBuild -->
    <Content Include="AddinManifest.addin">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>

    <!-- Don't use standard resource generator, since it doesn't allow
         one to use strings containing spaces -->
    <EmbeddedResource Include="Properties\**\*.resx">
        <Generator />
    </EmbeddedResource>

    <EmbeddedResource Include="Resources\**\*.*">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </EmbeddedResource>

    <Content Include="Properties\launchSettings.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <Compile Include="RibbonHelper.cs" />
    <Compile Include="App.cs" />
    <Compile Include="ExternalCommand.cs" />
    <Compile Include="RibbonCommand.cs" />
    <Compile Include="StringLocalizer.cs" />
    <Compile Include="ZeroDocStateAvailability.cs" />
  </ItemGroup>

  <PropertyGroup>
    <RootNamespace>RevitAddin</RootNamespace>
    <AssemblyName>RevitAddin</AssemblyName>

    <Authors>Your name</Authors>
    <PackageId>sample.vendor.id.change.it</PackageId>
    <Company>Acme Ltd</Company>
    <PackageProjectUrl>http://example.com/test</PackageProjectUrl>
    <Product>The description for your application goes here</Product>
    <Version>0.0.1</Version>
    <NeutralLanguage>en</NeutralLanguage>
  </PropertyGroup>

  <PropertyGroup>
    <MSBuildTaskDllPath Condition="'$(MSBuildRuntimeType)' == 'Full'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll</MSBuildTaskDllPath>
    <MSBuildTaskDllPath Condition="'$(MSBuildRuntimeType)' == 'Core'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</MSBuildTaskDllPath>
    <MSBuildTaskFactory Condition="'$(MSBuildRuntimeType)' == 'Full'">CodeTaskFactory</MSBuildTaskFactory>
    <MSBuildTaskFactory Condition="'$(MSBuildRuntimeType)' == 'Core'">RoslynCodeTaskFactory</MSBuildTaskFactory>
  </PropertyGroup>
  <UsingTask TaskName="ReplaceTextInFile" TaskFactory="$(MSBuildTaskFactory)" AssemblyFile="$(MSBuildTaskDllPath)">
    <ParameterGroup>
      <InputFilename ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
      <MatchExpression ParameterType="System.String" Required="true" />
      <ReplacementText ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <!-- Create and fill with data Revit addin manifest -->
  <Target Name="CreateAddinManifest" AfterTargets="AfterBuild" Condition="'$(RevitVersion)' != ''">
    <ItemGroup>
      <AddinManifest Include="$(OutputPath)\$(AssemblyName).addin" />
    </ItemGroup>
    <ReplaceTextInFile InputFilename="AddinManifest.addin" OutputFilename="@(AddinManifest)" MatchExpression="VendorDescription&gt;(.*?)&lt;" ReplacementText="VendorDescription&gt;$(Authors), $(Company), $(PackageProjectUrl)&lt;" />
    <ReplaceTextInFile InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="FullClassName&gt;((.*?)\.)+" ReplacementText="FullClassName&gt;$(RootNamespace)." />
    <ReplaceTextInFile InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;Name&gt;(.*?)&lt;" ReplacementText="&lt;Name&gt;$(Product)&lt;" />
    <ReplaceTextInFile InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="&lt;VendorId&gt;(.*?)&lt;" ReplacementText="&lt;VendorId&gt;$(PackageId)&lt;" />
    <ReplaceTextInFile Condition="'$(Configuration)' == 'Release'" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$(AssemblyName).dll&lt;" />
    <ReplaceTextInFile Condition="$(Configuration.Contains('Debug'))" InputFilename="@(AddinManifest)" OutputFilename="@(AddinManifest)" MatchExpression="Assembly&gt;(.*?)&lt;" ReplacementText="Assembly&gt;$([System.IO.Path]::GetFullPath('$(OutputPath)'))$(AssemblyName).dll&lt;" />
  </Target>

  <Target Name="CopyAddinsToAppData" AfterTargets="CreateAddinManifest" Condition="$(Configuration.Contains('Debug')) And '$(RevitVersion)' != ''">
    <!-- Copy newly compiled add-in files to AppData folder (before starting the debugger) -->
    <ItemGroup>
      <AddinFiles Include="$(OutputPath)\**\*$(RevitVersion).addin" />
    </ItemGroup>
    <PropertyGroup>
      <AddinFileBak>$(AppData)\Autodesk\Revit\Addins\$(RevitVersion)\%(AddinFiles.FileName)%(AddinFiles.Extension).bak</AddinFileBak>
      <AddinFileDisabled>$(AppData)\Autodesk\Revit\Addins\$(RevitVersion)\%(AddinFiles.FileName)%(AddinFiles.Extension).disabled</AddinFileDisabled>
    </PropertyGroup>
    <Message Condition="!Exists('$(AddinFileBak)') And !Exists('$(AddinFileDisabled)')" Importance="high" Text="Copying addin file into Revit Addin folder ($(AppData)\Autodesk\Revit\Addins\$(RevitVersion)\)" />
    <Copy Condition="!Exists('$(AddinFileBak)') And !Exists('$(AddinFileDisabled)')" SourceFiles="@(AddinFiles)" DestinationFolder="$(AppData)\Autodesk\Revit\Addins\$(RevitVersion)\" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="true" Retries="3" ContinueOnError="true" RetryDelayMilliseconds="300" />
  </Target>

  <Target Name="CleanAddinsInAppData" AfterTargets="AfterClean" Condition="'$(RevitVersion)' != ''">
    <!-- Delete previously deployed to AppData folder add-in files -->
    <ItemGroup>
      <AddinFiles Include="$(AppData)\Autodesk\Revit\Addins\**\$(RootNamespace)*.addin" />
      <AddinFiles Include="$(AppData)\Autodesk\Revit\Addins\**\$(AssemblyName).addin" />
    </ItemGroup>
    <Delete Files="@(AddinFiles)" />
  </Target>

  <Target Name="Revit2022Build" BeforeTargets="DispatchToInnerBuilds" Condition="!$(Configuration.Contains('Debug'))">
    <!-- By commenting this out you will disable Revit 2022 and 2023 support -->
    <Message Importance="high" Text="Run a parallel MSBuild for Revit 2022 and 2023" />
    <MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration);TargetFramework=net48;RevitVersion=2022"></MSBuild>
    <MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=$(Configuration);TargetFramework=net48;RevitVersion=2023"></MSBuild>
    <!-- /////////////////////////////////////////////////////////////////// -->
  </Target>

</Project>
